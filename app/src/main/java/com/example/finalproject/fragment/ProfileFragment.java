package com.example.finalproject.fragment;

import android.content.Intent;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;

import com.bumptech.glide.Glide;
import com.example.finalproject.LoginActivity;
import com.example.finalproject.R;
import com.example.finalproject.activity.CustomerFavoriteToursActivity;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.firestore.DocumentSnapshot;
import com.google.firebase.firestore.FirebaseFirestore;

public class ProfileFragment extends Fragment {

    private FirebaseAuth mAuth;
    private FirebaseFirestore db;

    private ImageView imgAvatar;
    private TextView tvUserName, tvUserEmail, tvUserPhone, tvUserDob;
    private Button btnLogout, btnGoToFavorites;
    private Button btnPersonalInfo, btnChangePassword, btnHistory, btnTerms, btnHelp;

    public ProfileFragment() {
        // Required empty public constructor
    }

    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        return inflater.inflate(R.layout.fragment_profile, container, false);
    }

    @Override
    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);

        mAuth = FirebaseAuth.getInstance();
        db = FirebaseFirestore.getInstance();

        // √Ånh x·∫° view trong layout
        imgAvatar = view.findViewById(R.id.imgAvatar);
        tvUserName = view.findViewById(R.id.tvUserName);
        tvUserEmail = view.findViewById(R.id.tvUserEmail);
        tvUserPhone = view.findViewById(R.id.tvUserPhone);
        tvUserDob = view.findViewById(R.id.tvUserDob);
        btnLogout = view.findViewById(R.id.btnLogout);
        btnGoToFavorites = view.findViewById(R.id.btnGoToFavorites);
        btnPersonalInfo = view.findViewById(R.id.btnPersonalInfo);
        btnChangePassword = view.findViewById(R.id.btnChangePassword);
        btnHistory = view.findViewById(R.id.btnHistory);
        btnTerms = view.findViewById(R.id.btnTerms);
        btnHelp = view.findViewById(R.id.btnHelp);

        btnGoToFavorites.setVisibility(View.GONE);

        loadUserData(); // üîπ L·∫•y d·ªØ li·ªáu t·ª´ Firestore v√† hi·ªÉn th·ªã

        // üîπ N√∫t ƒëƒÉng xu·∫•t
        btnLogout.setOnClickListener(v -> {
            mAuth.signOut();
            Intent intent = new Intent(getActivity(), LoginActivity.class);
            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
            startActivity(intent);
            requireActivity().finish();
        });

        // üîπ N√∫t danh s√°ch tour y√™u th√≠ch (ch·ªâ cho kh√°ch h√†ng)
        btnGoToFavorites.setOnClickListener(v -> {
            Intent intent = new Intent(getActivity(), CustomerFavoriteToursActivity.class);
            startActivity(intent);
        });

        // üîπ C√°c n√∫t c√≤n l·∫°i (v√≠ d·ª• sau n√†y c√≥ th·ªÉ m·ªü activity kh√°c)
        btnPersonalInfo.setOnClickListener(v ->
                Toast.makeText(getContext(), "M·ªü trang Th√¥ng tin c√° nh√¢n", Toast.LENGTH_SHORT).show()
        );

        btnChangePassword.setOnClickListener(v ->
                Toast.makeText(getContext(), "M·ªü trang ƒê·ªïi m·∫≠t kh·∫©u", Toast.LENGTH_SHORT).show()
        );

        btnHistory.setOnClickListener(v ->
                Toast.makeText(getContext(), "Xem l·ªãch s·ª≠ gia h·∫°n v√© th√°ng", Toast.LENGTH_SHORT).show()
        );

        btnTerms.setOnClickListener(v ->
                Toast.makeText(getContext(), "Xem ƒëi·ªÅu kho·∫£n d·ªãch v·ª•", Toast.LENGTH_SHORT).show()
        );

        btnHelp.setOnClickListener(v ->
                Toast.makeText(getContext(), "Tr·ª£ gi√∫p v√† h·ªó tr·ª£", Toast.LENGTH_SHORT).show()
        );
    }

    /**
     * üîπ L·∫•y d·ªØ li·ªáu ng∆∞·ªùi d√πng th·∫≠t t·ª´ Firestore
     */
    private void loadUserData() {
        FirebaseUser currentUser = mAuth.getCurrentUser();
        if (currentUser == null) {
            Toast.makeText(getContext(), "Kh√¥ng c√≥ ng∆∞·ªùi d√πng ƒëƒÉng nh·∫≠p", Toast.LENGTH_SHORT).show();
            return;
        }

        String uid = currentUser.getUid();

        db.collection("users").document(uid)
                .get()
                .addOnSuccessListener(document -> {
                    if (document.exists()) {
                        showUserData(document);
                    } else {
                        Toast.makeText(getContext(), "Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng trong Firestore", Toast.LENGTH_SHORT).show();
                    }
                })
                .addOnFailureListener(e ->
                        Toast.makeText(getContext(), "L·ªói t·∫£i d·ªØ li·ªáu: " + e.getMessage(), Toast.LENGTH_SHORT).show()
                );
    }

    /**
     * üîπ Hi·ªÉn th·ªã d·ªØ li·ªáu ng∆∞·ªùi d√πng l√™n UI
     */
    private void showUserData(DocumentSnapshot doc) {
        String firstname = doc.getString("firstname");
        String lastname = doc.getString("lastname");
        String email = doc.getString("email");
        String phone = doc.getString("phone");
        Object dobObj = doc.get("dob");
        String dob = "";

        if (dobObj instanceof com.google.firebase.Timestamp) {
            java.util.Date date = ((com.google.firebase.Timestamp) dobObj).toDate();
            java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("dd/MM/yyyy");
            dob = sdf.format(date);
        } else if (dobObj instanceof java.util.Date) {
            java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("dd/MM/yyyy");
            dob = sdf.format((java.util.Date) dobObj);
        } else if (dobObj instanceof String) {
            dob = (String) dobObj;
        } else {
            dob = "Ch∆∞a c√≥ ng√†y sinh";
        }

        String role = doc.getString("role");
        String avatarUrl = doc.getString("avatarUrl");

        // H·ªç t√™n
        String fullName = (firstname != null ? firstname : "") + " " + (lastname != null ? lastname : "");
        tvUserName.setText(fullName.trim().isEmpty() ? "Ch∆∞a c·∫≠p nh·∫≠t" : fullName);

        // Email
        tvUserEmail.setText(email != null ? email : "Ch∆∞a c√≥ email");

        // S·ªë ƒëi·ªán tho·∫°i
        tvUserPhone.setText(phone != null ? phone : "Ch∆∞a c√≥ s·ªë ƒëi·ªán tho·∫°i");

        // Ng√†y sinh
        tvUserDob.setText(dob != null ? dob : "Ch∆∞a c√≥ ng√†y sinh");

        // N·∫øu l√† customer ‚Üí hi·ªÉn th·ªã n√∫t tour y√™u th√≠ch
        if ("customer".equalsIgnoreCase(role)) {
            btnGoToFavorites.setVisibility(View.VISIBLE);
        } else {
            btnGoToFavorites.setVisibility(View.GONE);
        }

        // ·∫¢nh ƒë·∫°i di·ªán
        if (avatarUrl != null && !avatarUrl.isEmpty()) {
            Glide.with(this)
                    .load(avatarUrl)
                    .placeholder(R.drawable.ic_person)
                    .circleCrop()
                    .into(imgAvatar);
        } else {
            imgAvatar.setImageResource(R.drawable.ic_person);
        }
    }
}
